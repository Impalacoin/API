<?php

/**
 * @author Nicholas N. Chege
 * @copyright 2013
 */

require_once "required.php";

class Users extends Database{
    public function __construct(){
        parent::__construct();
    }
    public function getUserBalance(){
        $query="SELECT amount FROM accounts WHERE user_id=".$_SESSION["chasebank_user"];
        $result=self::query($query);
        if($result){
            if(mysql_numrows($result)==1){
                return mysql_result($result,0,"amount");
            }else{
                return false;
            }
        }else{
            return false;
        }
        
    }
    public static function isLoggedIn(){
        if(isset($_SESSION["chasebank_user"]) && !empty($_SESSION["chasebank_user"])){
            return true;
        }else{
            return false;
        }
    }
    public function getUserDetails(){
        $query = sprintf("SELECT * FROM users WHERE id='%s'",$_SESSION["chasebank_user"]);
        $result=self::query($query);
        if($result){
            return $result;
        }else{
            return false;
        }
        
    }
    public function getExchangeRate(){
        $query="SELECT exchange_rate FROM exchange_rates";
        $result=self::query($query);
        if($result){
            if(mysql_numrows($result)==1){
                return mysql_result($result,0,"exchange_rate");
            }else{
                return false;
            }
        }else{
            return false;
        }
    }
    public function register(){        
        $fields = array("first_name","last_name","country","address","town_city","postalcode_zip",
        "county_state","email","phone","password","security_one","security_answer_one","security_two",
        "security_answer_two","pin","birthday");
        
        $result = self::insert_record("users",$fields);
        if($result){
            $_SESSION["chasebank_user"]=self::insert_id();
            $query="INSERT INTO accounts SET user_id='".self::insert_id()."', amount=0";
            $result=self::query($query);
            if(!$result){
                return false;
            }
            return self::insert_id();
        }else{
            return false;
        }
    }
    public function checkIfUserExists($email){
        $query = "SELECT email FROM users WHERE email='".self::mysql_prep($email)."'";
        $result = self::query($query);
        if($result){
            if(mysql_numrows($result)>0){
                return true;
            }else{
                return false;
            }
        }
    }
    public static function checkIfLogedIn(){
        if(isset($_SESSION["chasebank_user"])){
            return true;
        }else{
            return false;
        }
    }
    public function login($email,$password){
        $query = sprintf("SELECT id FROM users WHERE email='%s' AND password='%s'",mysql_real_escape_string($email)
        ,mysql_real_escape_string(sha1($password)));
        $result=self::query($query);
        if($result){
            if(mysql_numrows($result) == 1){
                $_SESSION["chasebank_user"] = mysql_result($result,0,"id");
                return $_SESSION["chasebank_user"];
            }else{
                return false;
            }
        }else{
            return false;
        }
    }
    private function deposit(){
        $query = sprintf("UPDATE accounts SET amount = amount+%01.2f  WHERE user_id='%s'" 
        ,$_SESSION["payment"]["amount"],$_SESSION["chasebank_user"]);
        
        $result = self::query($query);
        $query = sprintf("INSERT INTO transactions SET transaction_type='%s', user_id='%s',amount=%01.2f,exchange_rate=%01.2f" 
        ,"Deposit",$_SESSION["chasebank_user"],$_SESSION["payment"]["amount"],$_SESSION["payment"]["ex_rate"]);
        $result = self::query($query);
        
    }
    public function sendToMobile(){
        $query = sprintf("UPDATE accounts SET amount=amount-%01.2f WHERE user_id='%s'",
        $_SESSION["payment"]["amount"],$_SESSION["chasebank_user"]);
        $result=self::query($query);
        
        $query = sprintf("INSERT INTO transactions SET transaction_type='%s', user_id='%s',amount=%01.2f,exchange_rate=%01.2f" 
        ,"mobile",$_SESSION["chasebank_user"],$_SESSION["payment"]["amount"],$_SESSION["payment"]["ex_rate"]);
        $result = self::query($query);
        
        $insert_id = mysql_insert_id();
        $query = sprintf("INSERT INTO recipients SET full_names ='%s',address='%s',mobile='%s',town_county='%s',
        transaction_id='%s',email='%s'",mysql_real_escape_string($_POST["full_names"]),mysql_real_escape_string($_POST["address"]),
        mysql_real_escape_string($_POST["mobile"]),mysql_real_escape_string($_POST["town_county"]),$insert_id,
        mysql_real_escape_string($_POST["email"]));       
        $result = self::query($query);
        
        $mpesa_number = $_POST["mobile"];
        
        $query=sprintf("INSERT INTO impalapay_facebook_money.send_money SET amount='%s',phone_number='%s',status='%s',network='%s'",
        (int)($_SESSION["payment"]["amount"]*$_SESSION["payment"]["ex_rate"]),
        mysql_real_escape_string(formatMobile($_POST["mobile"])),"send",
        mysql_real_escape_string($_POST["network"]));
        $result = self::query($query);
        if($result){
            return true;
        }else{
            return false;
        }
    }

    public function getUserNames(){
        $query="SELECT CONCAT(first_name,' ',last_name) FROM users WHERE id=".$_SESSION["chasebank_user"];
        $result=self::query($query);
        return mysql_result($result,0);
    }
    public function sendTobank(){
        $query = sprintf("UPDATE accounts SET amount=amount-%01.2f WHERE user_id='%s'",
        $_SESSION["payment"]["amount"],$_SESSION["chasebank_user"]);
        $result=self::query($query);
        $query = sprintf("INSERT INTO transactions SET transaction_type='%s', user_id='%s',amount=%01.2f,exchange_rate=%01.2f" 
        ,"bank",$_SESSION["chasebank_user"],$_SESSION["payment"]["amount"],$_SESSION["payment"]["ex_rate"]);
        $result = self::query($query);
        $insert_id = mysql_insert_id();
        $query = sprintf("INSERT INTO recipients SET full_names ='%s',address='%s',mobile='%s',town_county='%s',
        transaction_id='%s',email='%s',account_number='%s'",mysql_real_escape_string($_POST["full_names"]),mysql_real_escape_string($_POST["address"]),
        mysql_real_escape_string($_POST["mobile"]),mysql_real_escape_string($_POST["town_county"]),$insert_id,
        mysql_real_escape_string($_POST["email"]),mysql_real_escape_string($_POST["account_number"]));
        $result = self::query($query);
        if($result){
            return true;
        }else{
            return false;
        }
    }
    public function getTransactions(){
        $query = sprintf("SELECT transactions.id,transactions.amount,transactions.exchange_rate,transactions.date
        ,recipients.full_names,recipients.mobile,recipients.address,recipients.town_county,
        transactions.transaction_type,recipients.email 
        FROM 
        transactions,recipients WHERE transactions.user_id='%s' AND recipients.transaction_id = transactions.id
        ORDER BY transactions.id DESC",
        $_SESSION["chasebank_user"]);
        $result = self::query($query);
        if($result){
            return $result;
        }else{
            return false;
        }
    }
    
    public function calculateKCBCharges($amount){
        $payPal=$amount*(3.5/100);
        $commision=number_format($payPal,2);
        return $commision;
    }
    public function processCard($amount,$cardNumber,$cvv,$expiryDate){  
     
    $vpc_AccessCode = "BA63A10F";
    $vpc_Amount = $amount*100;
    $vpc_AVS_City = "Nairobi";
    $vpc_AVS_Country = "KEN";
    $vpc_AVS_PostCode = "30100";
    $vpc_AVS_Street01 = "2823";
    $vpc_card = "VC";
    $vpc_CardExp = $expiryDate;//"1505";
    $vpc_CardNum = $cardNumber;//"5254567200001519";
    $vpc_CardSecurityCode = $cvv;//"219";
    //$vpc_CashAdvance = "True";
    $vpc_Currency = "USD";
    $vpc_Command = "pay";
    $vpc_gateway = "ssl";
    $vpc_IPAddress = "196.216.73.150";
    $vpc_Merchant = "61004002";
    $vpc_MerchTxnRef = time();
    $vpc_RiskBypass = "Y";
    $vpc_OrderInfo=time();
    $vpc_TxSourceSubType = "SINGLE";
    $vpc_Version = "1";    
    $vpc_SecureHashType = "SHA256";
    $key="BB48A64077A1CBF08FF0D91C5A9FE42B";
    $url = "https://migs.mastercard.com.au/vpcdps";  
    //$url="http://localhost";     
     $myvalues = "vpc_AccessCode=" . $vpc_AccessCode . 
     "&vpc_Amount=" . $vpc_Amount . "&vpc_AVS_City=" . $vpc_AVS_City . 
     "&vpc_AVS_Country=".$vpc_AVS_Country."&vpc_AVS_PostCode=" . $vpc_AVS_PostCode . 
     "&vpc_AVS_Street01=" . $vpc_AVS_Street01 . "&vpc_CardExp=" . $vpc_CardExp . 
     "&vpc_CardNum=" . $vpc_CardNum. "&vpc_CardSecurityCode=" . $vpc_CardSecurityCode .
      "&vpc_card=" . $vpc_card . 
      "&vpc_Command=" . $vpc_Command . "&vpc_gateway=" . $vpc_gateway . 
      "&vpc_IPAddress=" . $vpc_IPAddress . "&vpc_Merchant=" . $vpc_Merchant . 
      "&vpc_MerchTxnRef=" . $vpc_MerchTxnRef . "&vpc_RiskBypass=" . $vpc_RiskBypass . 
      "&vpc_TxSourceSubType=" . $vpc_TxSourceSubType . "&vpc_Version=" . $vpc_Version . 
      "&vpc_Currency=".$vpc_Currency."&vpc_OrderInfo=".$vpc_OrderInfo;  
      
      $hashed_Value = hash_hmac("SHA256",$myvalues,$key);   
      $post_Data = $myvalues."&vpc_SecureHash=$hashed_Value&vpc_SecureHashType=$vpc_SecureHashType";
      $user_Agent = "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16";
        
      $ch = curl_init($url);
      //curl_setopt($ch,CURLOPT_HEADER,1);
      curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
      curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_ANY);
      curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
      curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
      curl_setopt($ch, CURLOPT_POST, 1);
      curl_setopt($ch,CURLOPT_POSTFIELDS,$post_Data);      
      curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
      curl_setopt($ch, CURLOPT_USERAGENT, $user_Agent);
      curl_setopt($ch, CURLOPT_REFERER, $url);
      
    
      
      $response = curl_exec($ch);
      $cleanResp= urldecode($response); 
      $respArray = explode("&",$cleanResp);
      $perfectResponse = array();
      foreach($respArray as $k=>$val){
        $arrayValues = explode("=",$val);
        $perfectResponse[$arrayValues[0]]=$arrayValues[1];         
      }
      //$perfectResponse["vpc_Message"]="Approved";
      if(strtoupper($perfectResponse["vpc_Message"])=="APPROVED"){
        $this->deposit();
      }
      return $perfectResponse["vpc_Message"];
      //return $cleanResp;
}
}

?>